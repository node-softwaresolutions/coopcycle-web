{% extends '@App/restaurant/layout.html.twig' %}

{% form_theme form '@App/form/restaurant.html.twig' %}

{% block breadcrumb %}
<li><a href="{{ path(restaurants_route) }}">{% trans %}adminDashboard.restaurants.title{% endtrans %}</a></li>
<li>{% if restaurant.id is not empty %}{{ restaurant.name }}{% else %}{% trans %}restaurant.form.createRestaurant{% endtrans %}{% endif %}</li>
{% endblock %}

{% block content %}

{% if formErrors is not empty %}
  <div class="row margin-bottom-md">
    <div class="col-sm-6 col-md-offset-3">
      <div class="alert alert-danger">
        <ul class="restaurant-availability-errors">
          {% for field, errors in formErrors %}
            {% if field != 'enabled' and field != 'data.enabled' %}
              <li class="margin-left-l">
                {{ errors|first }}
              </li>
            {% endif %}
          {% endfor %}
        </ul>
      </div>
    </div>
  </div>
{% endif %}

{% if activationErrors is not empty %}
  <div class="row margin-bottom-md">
    <div class="col-sm-6 col-md-offset-3">
      <div class="alert alert-warning">
        {% trans from 'validators' %}restaurant.notActivable{% endtrans %}
        <ul class="restaurant-availability-errors">
          {% for field, errors in activationErrors %}
            {% if field != 'enabled' and field != 'data.enabled' %}
            <li class="margin-left-l">
              {{ errors|first }}
            </li>
            {% endif %}
          {% endfor %}
        </ul>
      </div>
    </div>
  </div>
{% endif  %}

{% set cannot_be_enabled = ('enabled' in activationErrors|keys or 'data.enabled' in activationErrors|keys) %}

{{ form_start(form) }}

  <div class="row">
    <div class="col-sm-3">
      {% if form.imageFile is defined %}
        {{ form_row(form.imageFile) }}
      {% endif %}
    </div>
    <div class="col-sm-9">
      <div class="switch-wrapper">
        {% set enabled_checkbox_attr = { class: 'checkbox switch' } %}
        {% if cannot_be_enabled %}
          {% set enabled_checkbox_attr = enabled_checkbox_attr|merge({ disabled: 'disabled' }) %}
        {% endif %}
        {{ form_label(form.enabled) }} {{ form_widget(form.enabled, { attr: enabled_checkbox_attr }) }}
      </div>
      <span class="help-block">
          <i class="fa fa-info-circle"></i>&nbsp;{{ "restaurant.form.enabled.tooltip" | trans | raw }}
      </span>
      {{ form_row(form.category) }}
      {{ form_row(form.name) }}
      {{ form_row(form.description) }}
      {{ form_row(form.legalName) }}
      {{ form_row(form.website) }}
      {{ form_row(form.telephone) }}

      {% if form.siret is defined %}
        {{ form_row(form.siret) }}
      {% endif %}
      {% if form.vat_number is defined %}
        {{ form_row(form.vat_number) }}
      {% endif %}
      {% if form.rcs_number is defined %}
        {{ form_row(form.rcs_number) }}
      {% endif %}

      {% if form.exclusive is defined %}
        {{ form_row(form.exclusive) }}
      {% endif %}
      {% if form.quotesAllowed is defined %}
        {{ form_row(form.quotesAllowed) }}
      {% endif %}
      {% if form.depositRefundEnabled is defined %}
        {{ form_row(form.depositRefundEnabled) }}
      {% endif %}
    </div>
  </div>

  <hr>

  {#
  <div id="cuisines" data-prototype="{{ form_widget(form.servesCuisine.vars.prototype)|e('html_attr') }}">
    {{ form_label(form.servesCuisine) }}
    {% for cuisine in form.servesCuisine %}
      {{ form_widget(cuisine) }}
    {% endfor %}
  </div>
  <button class="btn btn-sm btn-success" data-toggle="add-cuisine" data-target="#cuisines">Ajouter</button>
  {% do form.servesCuisine.setRendered %}
  <hr>
  #}

  {% if restaurant.id is not null %}
    <p class="help-block">
      <i class="fa fa-info-circle"></i> {% trans %}restaurant.form.temporaryClosingRule{% endtrans %}  
      <a href="{{ path(planning_route, { id: restaurant.id }) }}">{% trans %}restaurant.form.accessPlanning{% endtrans %}</a>
    </p>
  {% endif %}

  {{ form_row(form.openingHours) }}

  <div id="opening-hours"></div>
  <label class="control-label">{% trans %}localBusiness.form.orderingDelayMinutes{% endtrans %}</label>
  <div class="row">
    <div class="col-sm-3">
      {{ form_row(form.orderingDelayDays) }}
    </div>
    <div class="col-sm-3">
      {{ form_row(form.orderingDelayHours) }}
    </div>
  </div>
  <span class="help-block">
    <i class="fa fa-info-circle"></i>&nbsp;{{ "localBusiness.form.orderingDelayMinutes.help" | trans | raw }}
  </span>

  <hr>

  {{ form_row(form.address.streetAddress) }}
  {{ form_row(form.address.postalCode) }}
  {{ form_row(form.address.addressLocality) }}
  {{ form_widget(form.address.longitude) }}
  {{ form_widget(form.address.latitude) }}
  {# http://stackoverflow.com/questions/10570002/how-to-make-form-rest-not-display-a-field-with-symfony2 #}
  {% do form.address.setRendered %}

  {% if restaurant.id is not null %}
    {% set show_stripe_connect = false %}
    {% for role in restaurant.stripeConnectRoles %}
      {% if is_granted(role) %}
        {% set show_stripe_connect = true %}
      {% endif %}
    {% endfor %}
    {% if show_stripe_connect %}
      <hr>
      {% include "@App/_partials/restaurant/stripe_accounts.html.twig" %}
      {% if form.allowStripeConnect is defined %}
        <div class="alert alert-warning">
          {{ 'restaurant.form.allow_stripe_connect.label'|trans }}
          <div class="pull-right">
            {{ form_widget(form.allowStripeConnect, { attr: { class: 'checkbox switch' }}) }}
          </div>
        </div>
      {% endif %}
    {% endif %}
  {% else %}
    {% if form.allowStripeConnect is defined %}
      {% do form.allowStripeConnect.setRendered %}
    {% endif %}
  {% endif %}

  <hr>

  {% if form.deliveryPerimeterExpression is defined %}
  <h4>{% trans %}restaurant.deliveryPerimeterExpression.title{% endtrans %}</h4>
  {{ form_widget(form.deliveryPerimeterExpression) }}
  <div id="restaurant_deliveryPerimeterExpression__picker">
  </div>
  <span class="help-block">
    <i class="fa fa-info-circle"></i> {{ 'restaurant.deliveryPerimeterExpression.help'|trans|raw }}
  </span>
  <hr>
  {% endif %}

  {% if form.contract is defined or restaurant.id is not null %}
    <h4>{% trans %}restaurant.contract.title{% endtrans %}</h4>
  {% endif %}

  {% if form.contract is defined %}
    {{ form_row(form.contract.minimumCartAmount) }}
    {{ form_row(form.contract.flatDeliveryPrice, { help: 'restaurant.contract.flatDeliveryPrice.help' }) }}
    {{ form_row(form.contract.customerAmount, { help: 'restaurant.contract.customerAmount.help' }) }}
    {{ form_row(form.contract.feeRate, { help: 'restaurant.contract.feeRate.help' }) }}
    <p>
      <a class="help-block collapsed" role="button" data-toggle="collapse" href="#{{ form.vars.id }}_advanced">
        <i class="fa fa-plus"></i><i class="fa fa-minus"></i> {% trans %}restaurant.contract.showAdvanced{% endtrans %}
      </a>
    </p>
    <div class="collapse" id="{{ form.vars.id }}_advanced">
      {{ form_row(form.contract.restaurantPaysStripeFee, { help: 'restaurant.contract.restaurantPaysStripeFee.help' }) }}
    </div>
  {% else %}
    {% if restaurant.id is not null %}
    <div class="row margin-bottom-md">
      {% if restaurant.contract is not empty %}
        <div class="col-md-12">
          <div class="alert alert-warning">
            {% trans %}restaurant.contract.onlyAdmin{% endtrans %}
          </div>
          <table class="table">
            <tr>
              <th>{% trans %}restaurant.contract.minimumCartAmount.label{% endtrans %}</th>
              <td class="text-right">{{ restaurant.contract.minimumCartAmount|price_format }}</td>
            </tr>
            <tr>
              <th>{% trans %}restaurant.contract.customerAmount.label{% endtrans %}</th>
              <td class="text-right">{{ restaurant.contract.customerAmount|price_format }}</td>
            </tr>
            <tr>
              <th>{% trans %}restaurant.contract.flatDeliveryPrice.label{% endtrans %}</th>
              <td class="text-right">{{ restaurant.contract.flatDeliveryPrice|price_format }}</td>
            </tr>
            <tr>
              <th>{% trans %}restaurant.contract.feeRate.label{% endtrans %}</th>
              <td class="text-right">{{ (restaurant.contract.feeRate * 100) }}%</td>
            </tr>
            <tr>
              <th>{% trans %}restaurant.contract.restaurantPaysStripeFee.label{% endtrans %}</th>
              <td class="text-right">{{ restaurant.contract.restaurantPaysStripeFee ? 'restaurant.contract.restaurantPaysStripeFee.restaurant' | trans : 'restaurant.contract.restaurantPaysStripeFee.cooperative' | trans }}</td>
            </tr>
          </table>
        </div>
      {% else %}
        <div class="col-md-12">
          <div class="alert alert-danger">
            {% trans %}restaurant.contract.noContract{% endtrans %}
          </div>
        </div>
      {% endif %}
    </div>
    {% endif %}
  {% endif %}

  <hr>

  <div class="row">
    <div class="col-sm-3">
      {% if form.delete is defined %}
      {{ form_widget(form.delete, { attr: { class: 'btn-block btn-danger' } }) }}
      {% endif %}
    </div>
    <div class="col-sm-9">
      <button type="submit" class="btn btn-block btn-primary">{{ 'basics.save'|trans }}</button>
    </div>
  </div>

{{ form_end(form) }}

<div id="restaurant-form-data"
  data-action-url="{{ oneup_uploader_endpoint('restaurant') }}"
  data-restaurant-id="{{ restaurant.id }}"
  data-restaurant-image="{{ coopcycle_asset(restaurant, 'imageFile', 'restaurant_thumbnail') }}"></div>

{% endblock %}

{% block styles %}
  {{ encore_entry_link_tags('restaurant-form') }}
{% endblock %}

{% block scripts %}
<script type="text/javascript">

  window.AppData = window.AppData || {};
  window.AppData.deliveryPerimeterExpression = {{ deliveryPerimeterExpression|raw }};
  window.AppData.zones = {{ zoneNames|raw }};

  var rowsWithErrors = [];
  {% for key, value in form.openingHours %}
    {% if not value.vars.valid %}
      rowsWithErrors.push({{ key }});
    {% endif %}
  {% endfor %}

  new CoopCycle.OpeningHoursInput(document.querySelector('#restaurant_openingHours'), {
    locale: $('html').attr('lang'),
    rowsWithErrors: rowsWithErrors
  })

  function initMap() {
    new CoopCycle.AddressInput(document.querySelector('#restaurant_address_streetAddress'), {
      elements: {
        latitude: document.querySelector('#restaurant_address_latitude'),
        longitude: document.querySelector('#restaurant_address_longitude'),
        postalCode: document.querySelector('#restaurant_address_postalCode'),
        addressLocality: document.querySelector('#restaurant_address_addressLocality')
      }
    })
  }

  function addForm($container) {
    var prototype = $container.data('prototype');
    var index = $container
      .find('select')
      .filter(function() {
        return this.name.match(/^restaurant\[servesCuisine\]/);
      })
      .length;

    var form = prototype.replace(/__name__/g, index);

    $container.append(form);
  }

  $(function() {
    $(document).on('click', '[data-remove]', function(e) {
      e.preventDefault();
      $(e.target).closest('.form-group').remove();
    });

    $('[data-toggle="add-cuisine"]').on('click', function(e) {
      e.preventDefault();
      var selector = $(e.target).data('target');
      var $target = $(selector);
      addForm($target);
    });
  });
</script>
{{ encore_entry_script_tags('restaurant-form') }}
<script src="https://maps.googleapis.com/maps/api/js?key={{ coopcycle_setting('google_api_key') }}&libraries=places&callback=initMap" async defer></script>
{% endblock %}
